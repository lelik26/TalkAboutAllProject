import asyncio
from telegram import BotCommand, Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, CallbackContext
import config as cfg
from handlers.talk_handlers import talk_command, talk_response
from utils.logger import setup_logger

logger = setup_logger(__name__)

class TalkAboutAllBot:
    def __init__(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –±–æ—Ç–∞ –∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã."""
        self.app = Application.builder().token(cfg.TELEGRAM_BOT_TOKEN).build()

    def setup_handlers(self):
        """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –∏ —Å–æ–æ–±—â–µ–Ω–∏–π –±–æ—Ç–∞."""
        self.app.add_handler(CommandHandler("start", self.start))
        self.app.add_handler(CommandHandler("talk", talk_command))
        self.app.add_handler(CommandHandler("help", self.help_command))
        self.app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, talk_response))

    async def start(self, update: Update, context: CallbackContext) -> None:
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start."""
        welcome_text = (
            "üëã –ü—Ä–∏–≤–µ—Ç, –º–µ–Ω—è –∑–æ–≤—É—Ç üë©‚Äçü¶∞–ë–æ–ª—Ç—É—à–∫–∞! –Ø –º–æ–≥—É –±–æ–ª—Ç–∞—Ç—å –Ω–∞ –ª—é–±—ã–µ –±—ã—Ç–æ–≤—ã–µ —Ç–µ–º—ã! –¢—ã –ø–∏—à–µ—à—å ‚úèÔ∏è–º–Ω–µ - —è –æ—Ç–≤–µ—á–∞—é üí¨.\n\n"
            "–ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—ã, —á—Ç–æ–±—ã –ø–æ–±–æ–ª—Ç–∞—Ç—å —Å–æ –º–Ω–æ–π:\n\n"
            "üí¨ /talk - –ü–æ–±–æ–ª—Ç–∞—Ç—å –æ–±–æ –≤—Å—ë–º.\n\n\n"
            "‚ÑπÔ∏è /help - –ø–æ–º–æ—â—å."
        )
        await update.message.reply_text(welcome_text)
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {update.effective_user.id} –Ω–∞—á–∞–ª —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º.")

    async def help_command(self, update: Update, context: CallbackContext):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–¥–¥–µ—Ä–∂–∫–µ."""
        help_text = (
            "‚ÑπÔ∏è **–ü–æ–º–æ—â—å**\n\n"
            "ü•≥–Ø –º–æ–≥—É –±–æ–ª—Ç–∞—Ç—å –Ω–∞ –ª—é–±—ã–µ –±—ã—Ç–æ–≤—ã–µ —Ç–µ–º—ã!:\n\n"
            "üí¨ /talk - –ü–æ–±–æ–ª—Ç–∞—Ç—å –æ–±–æ –≤—Å—ë–º.\n\n\n"
            "‚ÑπÔ∏è /help - –ø–æ–º–æ—â—å –∏ —Å–≤—è–∑—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π.\n\n"
            "üí¨ **–°–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π**: [–ù–∞–ø–∏—Å–∞—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É](https://t.me/i_VAN_79)"
        )
        await update.message.reply_text(help_text, parse_mode="Markdown", disable_web_page_preview=True)

    async def set_bot_commands(self):
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –≤—ã–±–æ—Ä–∞ –≤ Telegram."""
        commands = [
            BotCommand("start", "–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"),
            BotCommand("talk", "–ü–æ–±–æ–ª—Ç–∞—Ç—å –æ–±–æ –≤—Å—ë–º"),
            BotCommand("help", "–ü–æ–º–æ—â—å –∏ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞")
        ]
        tg_bot = self.app.bot if self.app.bot else await self.app.get_bot()
        await tg_bot.set_my_commands(commands)
        logger.info("–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã.")

async def main():
    bot = TalkAboutAllBot()
    bot.setup_handlers()
    await bot.app.initialize()         # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    await bot.set_bot_commands()       # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–º–∞–Ω–¥
    await bot.app.start()              # –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    await bot.app.updater.start_polling()  # –ó–∞–ø—É—Å–∫ polling
    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ.")
    # –ë–ª–æ–∫–∏—Ä—É–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, —á—Ç–æ–±—ã –±–æ—Ç —Ä–∞–±–æ—Ç–∞–ª –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ
    try:
        await asyncio.Event().wait()
    except KeyboardInterrupt:
        await bot.app.stop()

if __name__ == "__main__":
    asyncio.run(main())